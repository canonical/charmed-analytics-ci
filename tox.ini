# Copyright 2025 Canonical Ltd.
# See LICENSE file for licensing details.

[flake8]
max-line-length = 100

[tox]
skipsdist = True
skip_missing_interpreters = True
envlist = fmt, lint, unit, integration, update-requirements

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
passenv = 
	PYTHONPATH
setenv = 
	PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
	PYTHONBREAKPOINT=ipdb.set_trace
	PY_COLORS=1
deps = 
	poetry>=2.1.3

[testenv:update-requirements]
commands = 
	# updating all groups' locked dependencies:
	poetry lock --regenerate
description = Update requirements including those in subdirs
skip_install = true

[testenv:fmt]
commands = 
	isort {[vars]all_path}
	black {[vars]all_path}
description = Apply coding style standards to code
commands_pre = 
	poetry install --only fmt
skip_install = true

[testenv:lint]
commands = 
	codespell {toxinidir}/. --skip {toxinidir}/./.git --skip {toxinidir}/./.tox \
	--skip {toxinidir}/./build --skip {toxinidir}/./lib --skip {toxinidir}/./venv \
	--skip {toxinidir}/./.mypy_cache \
	--skip {toxinidir}/./icon.svg --skip *.json.tmpl \
	--skip {toxinidir}/./poetry.lock
	# pflake8 wrapper supports config from pyproject.toml
	pflake8 {[vars]all_path}
	isort --check-only --diff {[vars]all_path}
	black --check --diff {[vars]all_path}
description = Check code against coding style standards
commands_pre = 
	poetry install --only lint
skip_install = true

[testenv:unit]
commands = 
	coverage run --source={[vars]src_path} \
	-m pytest --ignore={[vars]tst_path}integration -vv --tb native {posargs}
	coverage report
	coverage xml
description = Run unit tests
commands_pre = 
	poetry install --only unit
skip_install = true

[testenv:integration]
passenv =
    CHACI_TEST_TOKEN
    CHACI_TEST_REPO
    CHACI_TEST_BASE_BRANCH
	CHACI_TEST_EMAIL
commands =
    pytest -vv --tb native {[vars]tst_path}integration --log-cli-level=INFO -s {posargs}
description = Run integration tests
commands_pre =
    poetry install --only integration
skip_install = true
