name: Tests

on:
  workflow_call:
    secrets:
      CHACI_TEST_TOKEN:
        required: true
      CHACI_GPG_PRIVATE:
        required: true
      CHACI_GPG_PASSPHRASE:
        required: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: pipx install tox
      - name: Run linters
        run: tox -e lint

  unit-test:
    name: Unit tests
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: pipx install tox
      - name: Run tests
        run: tox -e unit

  integration:
    name: Integration tests (microk8s)
    runs-on: ubuntu-24.04
    env:
      CHACI_TEST_TOKEN: ${{ secrets.CHACI_TEST_TOKEN }}
      CHACI_TEST_REPO: canonical/test-kubeflow-automation
      CHACI_TEST_BASE_BRANCH: test-rocks-automation
      CHACI_TEST_EMAIL: kubeflow-admin@lists.canonical.com
    steps:
      - uses: actions/checkout@v4

      - name: Set up GPG with passphrase for GitPython
        env:
          GPG_PRIVATE_KEY: ${{ secrets.CHACI_GPG_PRIVATE }}
          GPG_PASSPHRASE: ${{ secrets.CHACI_GPG_PASSPHRASE }}
          GIT_USER_EMAIL: kubeflow-admin@lists.canonical.com
          GIT_USER_NAME: Kubeflow Admin
        run: |
          set -euo pipefail

          echo "Creating GPG home directory..."
          export GNUPGHOME="$(mktemp -d)"
          chmod 700 "$GNUPGHOME"
          echo "GNUPGHOME=$GNUPGHOME" >> "$GITHUB_ENV"

          echo "Configuring gpg-agent..."
          echo "allow-preset-passphrase" > "$GNUPGHOME/gpg-agent.conf"
          echo "default-cache-ttl 3600" >> "$GNUPGHOME/gpg-agent.conf"
          echo "max-cache-ttl 31536000" >> "$GNUPGHOME/gpg-agent.conf"

          gpgconf --kill gpg-agent
          gpgconf --launch gpg-agent

          echo "Importing GPG private key..."
          echo "$GPG_PRIVATE_KEY" | gpg --batch --yes --import

          echo "Fetching key fingerprint and keygrip..."
          FINGERPRINT=$(gpg --list-secret-keys --with-colons | awk -F: '/^fpr:/ {print $10; exit}')
          KEYID=$(gpg --list-secret-keys --with-colons | awk -F: '/^sec:/ {print $5; exit}')
          KEYGRIP=$(gpg --batch --with-colons --with-keygrip --list-secret-keys "$FINGERPRINT" | awk -F: '/^grp:/ {print $10; exit}')

          echo "Setting trust level..."
          echo "$FINGERPRINT:6:" | gpg --import-ownertrust

          echo "Presetting passphrase in agent..."
          HEX_PASSPHRASE=$(echo -n "$GPG_PASSPHRASE" | xxd -ps -u | tr -d '\n')
          echo "PRESET_PASSPHRASE $KEYGRIP -1 $HEX_PASSPHRASE" | gpg-connect-agent

          echo "Configuring Git..."
          git config --global user.name "$GIT_USER_NAME"
          git config --global user.email "$GIT_USER_EMAIL"
          git config --global user.signingkey "$KEYID"
          git config --global commit.gpgsign true

          echo "GPG key and agent setup completed."

      - name: Install tox
        run: pipx install tox

      - name: Run integration tests
        run: |
          echo "Using GNUPGHOME=$GNUPGHOME"
          tox -vve integration
