name: Tests

on:
  workflow_call:
    secrets:
      CHACI_TEST_TOKEN:
        required: true
      CHACI_GPG_PRIVATE:
        required: true
      CHACI_GPG_PASSPHRASE:
        required: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: pipx install tox
      - name: Run linters
        run: tox -e lint

  unit-test:
    name: Unit tests
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: pipx install tox
      - name: Run tests
        run: tox -e unit

  integration:
    name: Integration tests (microk8s)
    runs-on: ubuntu-24.04
    env:
      CHACI_TEST_TOKEN: ${{ secrets.CHACI_TEST_TOKEN }}
      CHACI_TEST_REPO: canonical/test-kubeflow-automation
      CHACI_TEST_BASE_BRANCH: test-rocks-automation
      CHACI_TEST_EMAIL: kubeflow-admin@lists.canonical.com
    steps:
      - uses: actions/checkout@v4

      - name: Set up GPG key and passphrase
        run: |
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg

          echo "${{ secrets.CHACI_GPG_PRIVATE }}" | gpg --batch --import

          gpgconf --kill gpg-agent || true
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          echo "pinentry-program /usr/bin/pinentry-loopback" >> ~/.gnupg/gpg-agent.conf
          gpgconf --launch gpg-agent

          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "${{ env.CHACI_TEST_EMAIL }}"
          git config --global user.signingkey "ckfbot <${{ env.CHACI_TEST_EMAIL }})"
          git config --global commit.gpgsign true
          git config --global gpg.program gpg

          # Prime the gpg-agent to avoid tty issues
          echo "${{ secrets.CHACI_GPG_PASSPHRASE }}" | gpg \
            --batch --yes \
            --passphrase-fd 0 \
            --pinentry-mode loopback \
            --local-user "ckfbot <${{ env.CHACI_TEST_EMAIL }})" \
            --armor --sign -o /dev/null /dev/null
        env:
          GPG_TTY: $(tty || echo not-a-tty)

      - run: pipx install tox

      - name: Run integration tests
        run: tox -vve integration
