name: Tests

on:
  workflow_call:
    secrets:
      CHACI_TEST_TOKEN:
        required: true
      CHACI_GPG_PRIVATE:
        required: true
      CHACI_GPG_PASSPHRASE:
        required: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: pipx install tox
      - name: Run linters
        run: tox -e lint

  unit-test:
    name: Unit tests
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: pipx install tox
      - name: Run tests
        run: tox -e unit

  integration:
    name: Integration tests (microk8s)
    runs-on: ubuntu-24.04
    env:
      CHACI_TEST_TOKEN: ${{ secrets.CHACI_TEST_TOKEN }}
      CHACI_TEST_REPO: canonical/test-kubeflow-automation
      CHACI_TEST_BASE_BRANCH: test-rocks-automation
      CHACI_TEST_EMAIL: kubeflow-admin@lists.canonical.com
    steps:
      - uses: actions/checkout@v4

      - name: Set up GPG key and passphrase
        run: |
          # Create a directory for GnuPG configuration
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg

          # Import the private GPG key
          echo "${{ secrets.CHACI_GPG_PRIVATE }}" | gpg --batch --import

          # Try to start gpg-agent, but allow it to fail if already running
          gpg-agent --daemon --allow-loopback-pinentry --pinentry-program /usr/bin/pinentry-loopback > ~/.gnupg/gpg-agent.conf 2>&1 || true

          # Now, get the current agent info, whether it was just started or already running.
          eval "$(gpgconf --list-dirs agent-info)"

          # Configure git to use the GPG key for signing
          # Use the full User ID string as created for the key
          git config --global user.signingkey "ckfbot <kubeflow-admin@lists.canonical.com>"
          git config --global commit.gpgsign true
          git config --global user.email "kubeflow-admin@lists.canonical.com" # This is fine as it's just the email part
          git config --global user.name "ckfbot" # Or a suitable name

          # Tell gpg-agent to cache the passphrase.
          # Use the full User ID string as created for the key
          echo "${{ secrets.CHACI_GPG_PASSPHRASE }}" | gpg --batch --yes --passphrase-fd 0 --local-user "ckfbot <kubeflow-admin@lists.canonical.com>" --armor --sign -o /dev/null /dev/null
        env:
          GPG_TTY: /dev/tty

      - run: pipx install tox

      - name: Run integration tests
        run: tox -vve integration